version: '3.9'
  #x-default-logging: &logging
  #  driver: "json-file"
  #  options:
  #    max-size: "5m"
  #    max-file: "2"

networks:
  default:
    name: o11y-demo
    driver: bridge

services:
  otelcol0:
    image: ${OTEL_COLLECTOR_IMAGE:-ghcr.io/liatrio/liatrio-otel-collector:0.7.1-arm64}
    container_name: otelcol0
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otel/config.yaml"]
    env_file:
      - ./.env
      #environment:
      #  - GH_PAT
      #  - GH_USER
    volumes:
      - ./src/config.yaml:/etc/otel/config.yaml
    ports:
      - "4317:4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464:9464"          # Prometheus exporter
      - "8888:8888"          # metrics endpoint
        #logging: *logging

  otelcol1:
    image: ${OTEL_COLLECTOR_IMAGE:-ghcr.io/liatrio/liatrio-otel-collector:0.7.1-arm64}
    container_name: otelcol1
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otel/config.yaml"]
    env_file:
      - ./liatrio.env
      #environment:
      #  - GH_PAT
      #  - GH_USER
    volumes:
      - ./src/liatrio-config.yaml:/etc/otel/config.yaml
    ports:
      - "3317:4317"          # OTLP over gRPC receiver
      - "3318:4318"     # OTLP over HTTP receiver
      - "8464:9464"          # Prometheus exporter
      - "7888:8888"          # metrics endpoint
        #logging: *logging


  # Grafana
  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 100M
    volumes:
      - ./src/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./src/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3000:3000"
        #logging: *logging

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./src/prom-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "9090:9090"
        #logging: *logging

